# cypress_test_api
#
# This file was automatically generated by APIMATIC v3.0
# ( https://www.apimatic.io ).

module CypressTestApi
  #  cypress_test_api client class.
  class Client
    include CoreLibrary
    attr_reader :config

    # Access to client controller.
    # @return [APIController] Returns the controller instance.
    def client
      @client ||= APIController.new @global_configuration
    end

    def initialize(
      connection: nil, adapter: :net_http_persistent, timeout: 60,
      max_retries: 0, retry_interval: 1, backoff_factor: 2,
      retry_statuses: [408, 413, 429, 500, 502, 503, 504, 521, 522, 524],
      retry_methods: %i[get put], http_callback: nil, proxy_settings: nil,
      environment: Environment::PRODUCTION, default_host: 'www.example.com',
      config: nil
    )
      @config = if config.nil?
                  Configuration.new(connection: connection, adapter: adapter,
                                    timeout: timeout, max_retries: max_retries,
                                    retry_interval: retry_interval,
                                    backoff_factor: backoff_factor,
                                    retry_statuses: retry_statuses,
                                    retry_methods: retry_methods,
                                    http_callback: http_callback,
                                    proxy_settings: proxy_settings,
                                    environment: environment,
                                    default_host: default_host)
                else
                  config
                end

      @global_configuration = GlobalConfiguration.new(client_configuration: @config)
                                                 .base_uri_executor(@config.method(:get_base_uri))
                                                 .global_errors(BaseController::GLOBAL_ERRORS)
                                                 .user_agent(BaseController.user_agent)
    end
  end
end
