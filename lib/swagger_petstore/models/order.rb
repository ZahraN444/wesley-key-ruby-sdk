# swagger_petstore
#
# This file was automatically generated by APIMATIC v3.0
# ( https://www.apimatic.io ).

require 'date'
module SwaggerPetstore
  # Order Model.
  class Order < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :pet_id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :quantity

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :ship_date

    # TODO: Write general description for this method
    # @return [Status1Enum]
    attr_accessor :status

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :complete

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['pet_id'] = 'petId'
      @_hash['quantity'] = 'quantity'
      @_hash['ship_date'] = 'shipDate'
      @_hash['status'] = 'status'
      @_hash['complete'] = 'complete'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        id
        pet_id
        quantity
        ship_date
        status
        complete
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = SKIP, pet_id = SKIP, quantity = SKIP, ship_date = SKIP,
                   status = SKIP, complete = SKIP)
      @id = id unless id == SKIP
      @pet_id = pet_id unless pet_id == SKIP
      @quantity = quantity unless quantity == SKIP
      @ship_date = ship_date unless ship_date == SKIP
      @status = status unless status == SKIP
      @complete = complete unless complete == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : SKIP
      pet_id = hash.key?('petId') ? hash['petId'] : SKIP
      quantity = hash.key?('quantity') ? hash['quantity'] : SKIP
      ship_date = if hash.key?('shipDate')
                    (DateTimeHelper.from_rfc3339(hash['shipDate']) if hash['shipDate'])
                  else
                    SKIP
                  end
      status = hash.key?('status') ? hash['status'] : SKIP
      complete = hash.key?('complete') ? hash['complete'] : SKIP

      # Create object from extracted values.
      Order.new(id,
                pet_id,
                quantity,
                ship_date,
                status,
                complete)
    end

    def to_custom_ship_date
      DateTimeHelper.to_rfc3339(ship_date)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} id: #{@id}, pet_id: #{@pet_id}, quantity: #{@quantity}, ship_date:"\
      " #{@ship_date}, status: #{@status}, complete: #{@complete}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} id: #{@id.inspect}, pet_id: #{@pet_id.inspect}, quantity:"\
      " #{@quantity.inspect}, ship_date: #{@ship_date.inspect}, status: #{@status.inspect},"\
      " complete: #{@complete.inspect}>"
    end
  end
end
